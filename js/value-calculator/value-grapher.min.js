// - Use ChartObj.toBase64Image() to display the graph and chart 
//	 in a new window for easy printing/saving
// 
// - Add support/rounding for decimal places
// 
// - Confirm the yearly fees are being added at the proper time and not a month early
// 
// - Maybe detect the width of the screen and if it's too small then add all the data to the table but only show the graph in 3 month increments. Or take off the labels
// - - Divide numOfMonths by 12 and let that be the increment for how often the graph is updated, Add a new variable and increment to the existing for loops, so it's var i=0, j=0 and i++; j++
// 
//  - Add the ability to hide the bottom labels to Chart.js
//  
//  - Perhaps make an "advanced" version that will let you input all the costs and their renewal times independently and it calculates it all for you.
//  
//  - Add "Back to top" link to bottom of page
//  
//  - Accept either a whole number or percentage for increase in revenue
//Create the labels for the X-axis of the chart. Each label is shown as a month and year.
function generateLabels(e){var t=[],n=["January","February","March","April","May","June","July","August","September","October","November","December"],r=new Date;r.setMonth(r.getMonth()+1);for(var i=0;i<e;i++){var s=n[r.getMonth()]+" "+r.getFullYear();t.push(s);r.setMonth(r.getMonth()+1)}return t}function generateCostData(e,t){var n=[],r=0,i=parseInt(e.upfrontCost.value.replace(/\$/g,""),10),s=parseInt(e.monthlyCost.value.replace(/\$/g,""),10),o=parseInt(e.yearlyCost.value.replace(/\$/g,""),10);r+=i;for(var u=1;u<=t;u++){r+=s;u%12==0&&u!=0&&(r+=o);n.push(r)}return n}function generateRevenueData(e,t){var n=[],r=0,i=parseInt(e.monthlyRevenue.value.replace(/\$/g,""),10),s=parseInt(e.percentageIncrease.value.replace(/\%/g,""),10),o=parseInt(i*(s/100));for(var u=1;u<=t;u++){r+=o;n.push(r)}return n}function displaySummary(e){var t=["<p>"],n=ChartObj.datasets[0].points,r=ChartObj.datasets[1].points;for(var i=11;i<e;i+=12){var s=r[i].value-n[i].value;t.push("<h3>Year ",(i+1)/12,"</h3><p>After ",(i+1)/12," year",(i+1)/12>1?"s":""," your client will have spent a total of $",numberWithCommas(n[i].value)," and had an increase in revenue of $",numberWithCommas(r[i].value)," for a ",s>0?"<span class='positiveValueText'>profit of $":"<span class='negativeValueText'>loss of $",numberWithCommas(Math.abs(s)),"</span>. You will have provided a ",numberWithCommas(Math.round(s/n[i].value*100)),"% return on their investment.</p>")}t.push("</p>");document.getElementById("valueSummary").innerHTML=t.join("")}function drawTable(){var e=["<table><tr class='hideWhenNarrow'><th scope='col'>Month</th><th scope='col'>Accumulated Costs</th><th scope='col'>Accumulated Increase in Revenue</th><th scope='col'>Value Created</th></tr>"],t=ChartObj.datasets[0].points,n=ChartObj.datasets[1].points;for(var r=0,i=ChartObj.datasets[0].points.length;r<i;r++){var s=n[r].value-t[r].value;e.push("<tr><th scope='row'>(",r+1,") ",t[r].label,"</th><td data-th='Accumulated Costs'>$",numberWithCommas(t[r].value),"</td><td data-th='Accumulate Increase in Revenue'>$",numberWithCommas(n[r].value),s>0?"<td class='positiveValue' data-th='Value Created'>&plus; $":"<td class='negativeValue' data-th='Value Created'>&minus; $",numberWithCommas(Math.abs(s)),"</td></tr>")}e.push("</table>");document.getElementById("valueTable").innerHTML=e.join("")}function drawGraph(e){var t=document.getElementById("valueCanvas"),n=t.width;t.width=0;t.width=n;typeof ChartObj!="undefined"&&ChartObj.destroy();var r=e.numOfMonths.value,i={labels:generateLabels(r),datasets:[{label:"Cost of Website",fillColor:"rgba(256,0, 0,0.2)",strokeColor:"rgba(256,0,0,1)",pointColor:"rgba(256,0,0,1)",pointStrokeColor:"#fff",pointHighlightFill:"#fff",pointHighlightStroke:"rgba(220,220,220,1)",data:generateCostData(e,r)},{label:"Increase in Revenue",fillColor:"rgba(0,256,0,0.2)",strokeColor:"rgba(0,156,0,1)",pointColor:"rgba(0,156,0,1)",pointStrokeColor:"#fff",pointHighlightFill:"#fff",pointHighlightStroke:"rgba(151,187,205,1)",data:generateRevenueData(e,r)}]},s=t.getContext("2d");window.ChartObj=(new Chart(s)).Line(i,{responsive:!0,scaleShowGridLines:!0,scaleGridLineColor:"rgba(0,0,0,.05)",scaleGridLineWidth:1,scaleFontSize:11,bezierCurve:!0,bezierCurveTension:.4,pointDot:!1,pointDotRadius:4,pointDotStrokeWidth:1,pointHitDetectionRadius:20,datasetStroke:!0,datasetStrokeWidth:2,datasetFill:!0,scaleLabel:"$<%=value%>",multiTooltipTemplate:"$<%= value %>"});drawTable();displaySummary(r);return!1}function numberWithCommas(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}jQuery(document).ready(function(){jQuery("#valueForm").parsley();window.ParsleyValidator.addValidator("money",function(e){var t=/^\$?\d+(?:\.\d{2})?$/;return e.match(t)&&parseInt(e.replace(/\$/g,""))>0?!0:!1},32).addMessage("en","money","Please enter a positive amount in US dollars.");window.ParsleyValidator.addValidator("percentage",function(e){var t=/^\d+\%?$/;return e.match(t)&&parseInt(e.replace(/\%/g,""))>0?!0:!1},32).addMessage("en","percentage","Please enter a positive number.");jQuery("#valueForm").submit(function(){jQuery(this).parsley().validate();jQuery(this).parsley().isValid()&&drawGraph(this)});jQuery("#valueForm").submit()});